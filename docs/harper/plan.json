{
  "reqs": [
    {
      "id": "REQ-001",
      "title": "Slack Command Handler Foundation",
      "acceptance": [
        "FastAPI endpoint accepts POST /slack/commands",
        "Validates Slack signature using signing secret",
        "Returns 200 with ephemeral message within 2s",
        "Logs command metadata to structured JSON",
        "Handles /coffee",
        "/coffee-history",
        "/coffee-cancel commands"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-002",
      "title": "Order Submission Modal",
      "acceptance": [
        "Opens Slack modal with drink type",
        "size",
        "customization fields",
        "Validates modal submission payload",
        "Persists order to PostgreSQL orders table",
        "Publishes coffee.order.placed event to Kafka",
        "Returns confirmation message to user within 5s"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-003",
      "title": "Coffee Run Lifecycle Management",
      "acceptance": [
        "Creates CoffeeRun entity with status=active",
        "Generates UUID for run_id",
        "Associates run with workspace_id and channel_id",
        "Stores initiator_user_id from Slack payload",
        "Publishes coffee.run.created event to Kafka"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-004",
      "title": "Runner Assignment Algorithm",
      "acceptance": [
        "Queries last 30 days of runs per user",
        "Calculates weighted fairness score (fewest runs wins)",
        "Excludes users with no orders in 14 days",
        "Updates CoffeeRun.runner_user_id atomically",
        "Publishes coffee.runner.assigned event to Kafka"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-005",
      "title": "Runner Notification System",
      "acceptance": [
        "Sends Slack DM to assigned runner within 5 minutes",
        "Includes order summary with drink types and sizes",
        "Attaches \"Mark Complete\" interactive button",
        "Updates reminder_sent_at timestamp in PostgreSQL",
        "Retries with exponential backoff on Slack API failure"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-006",
      "title": "Run Completion Handler",
      "acceptance": [
        "Validates button interaction from assigned runner",
        "Updates CoffeeRun status to completed",
        "Records completed_at timestamp",
        "Publishes coffee.run.completed event to Kafka",
        "Posts completion message in original thread"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-007",
      "title": "User Preference Tracking",
      "acceptance": [
        "Stores last 3 orders per user in UserPreference table",
        "Increments order_count for each drink type",
        "Updates last_ordered_at timestamp",
        "Suggests most frequent order in next /coffee modal",
        "Handles concurrent updates with optimistic locking"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-008",
      "title": "Coffee History Query",
      "acceptance": [
        "Retrieves last 10 runs from PostgreSQL with JOIN on orders",
        "Formats response with timestamp",
        "runner",
        "order count",
        "Returns Slack message within 2 seconds",
        "Handles empty history gracefully",
        "Paginates if user requests more than 10 runs"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-009",
      "title": "Run Cancellation Logic",
      "acceptance": [
        "Validates cancellation request from initiator or runner",
        "Updates CoffeeRun status to cancelled",
        "Publishes coffee.run.cancelled event to Kafka",
        "Notifies all participants via Slack thread",
        "Prevents cancellation after completion"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-010",
      "title": "Kafka Event Consumer",
      "acceptance": [
        "Subscribes to coffee.orders",
        "coffee.assignments",
        "coffee.completions topics",
        "Processes events idempotently with offset tracking",
        "Handles deserialization errors with dead-letter queue",
        "Implements circuit breaker for downstream failures",
        "Logs processing metrics to Prometheus"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-011",
      "title": "Audit Logging Service",
      "acceptance": [
        "Inserts AuditLog entries for all state changes",
        "Captures event_type",
        "user_id",
        "run_id",
        "payload as JSONB",
        "Indexes by timestamp and event_type",
        "Retains logs for 90 days with automated cleanup",
        "Exposes audit query API for compliance"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-012",
      "title": "Slack Rate Limit Resilience",
      "acceptance": [
        "Detects HTTP 429 responses from Slack API",
        "Buffers events in Kafka with retry metadata",
        "Implements exponential backoff (1s initial",
        "60s max)",
        "Tracks retry attempts in Prometheus counter",
        "Successfully delivers messages within 5 minutes"
      ],
      "dependsOn": [],
      "track": "App",
      "status": "open"
    },
    {
      "id": "REQ-013",
      "title": "PostgreSQL Schema Deployment",
      "acceptance": [
        "Defines tables for User",
        "CoffeeRun",
        "Order",
        "UserPreference",
        "AuditLog",
        "Creates indexes on user_id",
        "run_id",
        "created_at",
        "Configures connection pooling (max 20 connections)",
        "Enables SSL for encrypted connections",
        "Applies migrations via Alembic or Flyway"
      ],
      "dependsOn": [],
      "track": "Infra",
      "status": "open"
    },
    {
      "id": "REQ-014",
      "title": "Kafka Topic Configuration",
      "acceptance": [
        "Creates topics: slack.events",
        "coffee.orders",
        "coffee.assignments",
        "coffee.completions",
        "Sets replication factor to 2 across 3 brokers",
        "Configures partitions (3 per topic) for parallelism",
        "Enables log compaction for coffee.assignments",
        "Sets retention to 7 days"
      ],
      "dependsOn": [],
      "track": "Infra",
      "status": "open"
    },
    {
      "id": "REQ-015",
      "title": "Kong Gateway Route Setup",
      "acceptance": [
        "Configures /slack/commands and /slack/interactions routes",
        "Integrates OIDC plugin with Ory Hydra for token validation",
        "Enforces rate limiting (100 req/min per user)",
        "Adds request logging to Prometheus",
        "Sets up health check endpoint /health"
      ],
      "dependsOn": [],
      "track": "Infra",
      "status": "open"
    },
    {
      "id": "REQ-016",
      "title": "Vault Secrets Integration",
      "acceptance": [
        "Stores Slack signing secret",
        "PostgreSQL credentials",
        "Kafka SASL config",
        "Configures Kubernetes service account for Vault access",
        "Injects secrets as environment variables via init container",
        "Implements secret rotation every 90 days",
        "Audits secret access in Vault logs"
      ],
      "dependsOn": [],
      "track": "Infra",
      "status": "open"
    },
    {
      "id": "REQ-017",
      "title": "Kubernetes Deployment Manifest",
      "acceptance": [
        "Defines Helm chart with 3 replicas for high availability",
        "Configures resource requests (1 vCPU",
        "2 GB RAM per pod)",
        "Sets liveness and readiness probes on /health endpoint",
        "Mounts ConfigMaps for workspace_id",
        "Kafka brokers",
        "Applies PodDisruptionBudget (min 2 available)"
      ],
      "dependsOn": [],
      "track": "Infra",
      "status": "open"
    },
    {
      "id": "REQ-018",
      "title": "Observability Stack Setup",
      "acceptance": [
        "Deploys Prometheus with /metrics scrape config",
        "Creates Grafana dashboards for command latency",
        "order volume",
        "error rates",
        "Configures alerting rules for high error rate (>1%)",
        "Sets up Fluentd for structured log aggregation",
        "Integrates with existing on-prem monitoring"
      ],
      "dependsOn": [],
      "track": "Infra",
      "status": "open"
    }
  ],
  "snapshot": {
    "total": 18,
    "open": 18,
    "in_progress": 0,
    "done": 0,
    "deferred": 0,
    "progressPct": 0
  }
}